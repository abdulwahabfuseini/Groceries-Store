// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  username       String
  email          String    @unique
  emailVerified  DateTime?
  image          String?   @default("/default-image.jpg")
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts Account[]
}

model Account {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  userId            String    @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?   @db.String
  access_token      String?   @db.String
  expires_at        DateTime?
  token_type        String?
  scope             String?
  id_token          String?   @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Appointment {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  fullname    String
  email       String
  phoneNumber String
  gender      String
  time        DateTime
  date        DateTime
  address     String
  city        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  fullname    String
  email       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OrderSchema {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  line_items String
  name       String
  email      String
  city       String
  zip        String
  state      String
  address    String
  paid       Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
